/**
 * MCP (Model Context Protocol) compatible type definitions
 * Standard interfaces conforming to MCP specification
 */
/**
 * Create text content
 */
export function createTextContent(text) {
    return {
        type: "text",
        text
    };
}
/**
 * Create resource content
 */
export function createResourceContent(resource) {
    return {
        type: "resource",
        resource
    };
}
/**
 * Convert internal workflow result to MCP format
 */
export function toMcpResult(result) {
    const content = [
        createTextContent(result.displayText)
    ];
    // Resources are now embedded in displayText, no need to add them separately
    // This avoids duplicate display in clients that support resource content type
    return {
        content,
        isError: result.data.success === false,
        // Add structured content, return response object conforming to OpenAPI specification
        structuredContent: result.data && typeof result.data === 'object' && 'displayText' in result.data
            ? result.data // If data is already a complete response object
            : undefined // Otherwise don't return structuredContent
    };
}
//# sourceMappingURL=mcpTypes.js.map